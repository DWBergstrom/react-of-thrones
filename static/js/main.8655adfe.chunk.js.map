{"version":3,"sources":["PersonDetail.js","Person.js","House.js","App.js","serviceWorker.js","index.js"],"names":["PersonDetail","_ref","description","react_default","a","createElement","className","Person","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hidden","toggleHidden","bind","assertThisInitialized","setState","onClick","name","src_PersonDetail","Component","House","liked","collapsed","toggleLiked","toggleCollapsed","concat","people","map","person","src_Person","key","houses","wikiSuffix","imageSuffix","App","house","src_House","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sOAMeA,EAJM,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,YAAF,OACnBC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAsBJ,IC4CvBK,cAhCb,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,QAAQ,GAGVR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAPFA,8EAWlBG,KAAKS,SAAS,CACZJ,QAASL,KAAKI,MAAMC,0CAMtB,OACId,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIiB,QAASV,KAAKM,aAAcZ,UAAU,oBAAoBM,KAAKJ,MAAMe,MACzEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAWM,KAAKI,MAAMC,OAAS,SAAW,IAC7Cd,EAAAC,EAAAC,cAACmB,EAAD,CACEtB,YAAaU,KAAKJ,MAAMN,uBAxBjBuB,aCuCNC,cAhDb,SAAAA,EAAalB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAc,IAClBjB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgB,GAAAX,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXW,OAAO,EACPC,WAAW,GAIbnB,EAAKoB,YAAcpB,EAAKoB,YAAYV,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAKqB,gBAAkBrB,EAAKqB,gBAAgBX,KAArBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAVLA,6EAclBG,KAAKS,SAAS,CACZM,OAAQf,KAAKI,MAAMW,kDAKrBf,KAAKS,SAAS,CACZO,WAAYhB,KAAKI,MAAMY,6CAKzB,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,cAAAyB,OAAgBnB,KAAKI,MAAMW,MAAQ,QAAU,KACzDxB,EAAAC,EAAAC,cAAA,MAAIC,UAAS,oBAAAyB,OAAsBnB,KAAKI,MAAMY,UAAY,YAAc,KAAOhB,KAAKJ,MAAMe,MAC1FpB,EAAAC,EAAAC,cAAA,KAAGC,UAAWM,KAAKI,MAAMY,UAAY,YAAc,IAAnD,2CACAzB,EAAAC,EAAAC,cAAA,MAAIC,UAAS,GAAAyB,OAAKnB,KAAKI,MAAMY,UAAY,YAAc,KACtDhB,KAAKJ,MAAMwB,OAAOC,IAAI,SAAAC,GAAM,OAC3B/B,EAAAC,EAAAC,cAAC8B,EAAD,CACEC,IAAKF,EAAOX,KACZA,KAAMW,EAAOX,KACbrB,YAAagC,EAAOhC,iBAIxBC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcgB,QAASV,KAAKiB,aAAcjB,KAAKI,MAAMW,MAAQ,SAAW,QAC1FxB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBgB,QAASV,KAAKkB,iBAAkBlB,KAAKI,MAAMY,UAAY,OAAS,oBA1CxFH,aCEdY,EAAS,CACb,CACEd,KAAM,SACNe,WAAY,cACZN,OAAQ,CACN,CACET,KAAM,qBACNrB,YAAa,iGACbqC,YAAa,eACbD,WAAY,gBAEd,CACEf,KAAM,eACNrB,YAAa,6DACbqC,YAAa,eACbD,WAAY,gBAEd,CACEf,KAAM,aACNrB,YAAa,wDACbqC,YAAa,aACbD,WAAY,cAEd,CACEf,KAAM,cACNrB,YAAa,wDACbqC,YAAa,cACbD,WAAY,eAEd,CACEf,KAAM,aACNrB,YAAa,2DACbqC,YAAa,aACbD,WAAY,cAEd,CACEf,KAAM,uBACNrB,YAAa,qDACbqC,YAAa,gBACbD,WAAY,iBAEd,CACEf,KAAM,eACNrB,YAAa,wDACbqC,YAAa,eACbD,WAAY,gBAEd,CACEf,KAAM,WACNrB,YAAa,+EACbqC,YAAa,WACbD,WAAY,cAIlB,CACEf,KAAM,aACNe,WAAY,kBACZN,OAAQ,CACN,CACET,KAAM,kBACNrB,YAAa,6CACbqC,YAAa,kBACbD,WAAY,mBAEd,CACEf,KAAM,mBACNrB,YAAa,mCACbqC,YAAa,mBACbD,WAAY,oBAEd,CACEf,KAAM,kBACNrB,YAAa,qEACbqC,YAAa,kBACbD,WAAY,mBAEd,CACEf,KAAM,qCACNrB,YAAa,iEACbqC,YAAa,mBACbD,WAAY,sBAIlB,CACEf,KAAM,aACNe,WAAY,kBACZN,OAAQ,CACN,CACET,KAAM,wBACNrB,YAAa,qDACbqC,YAAa,mBACbD,WAAY,oBAEd,CACEf,KAAM,oBACNrB,YAAa,sEACbqC,YAAa,oBACbD,WAAY,qBAEd,CACEf,KAAM,kBACNrB,YAAa,oEACbqC,YAAa,kBACbD,WAAY,mBAEd,CACEf,KAAM,oBACNrB,YAAa,+DACbqC,YAAa,oBACbD,WAAY,qBAEd,CACEf,KAAM,mBACNrB,YAAa,qCACbqC,YAAa,mBACbD,WAAY,oBAEd,CACEf,KAAM,qBACNrB,YAAa,0CACbqC,YAAa,qBACbD,WAAY,wBAIlB,CACEf,KAAM,aACNe,WAAY,kBACZN,OAAQ,CACN,CACET,KAAM,qBACNrB,YAAa,yHACbqC,YAAa,qBACbD,WAAY,sBAEd,CACEf,KAAM,oBACNrB,YAAa,6DACbqC,YAAa,oBACbD,WAAY,uBAIlB,CACEf,KAAM,WACNe,WAAY,gBACZN,OAAQ,CACN,CACET,KAAM,gBACNrB,YAAa,8CACbqC,YAAa,gBACbD,WAAY,iBAEd,CACEf,KAAM,gBACNrB,YAAa,uEACbqC,YAAa,gBACbD,WAAY,iBAEd,CACEf,KAAM,eACNrB,YAAa,kCACbqC,YAAa,eACbD,WAAY,kBAIlB,CACEf,KAAM,UACNe,WAAY,eACZN,OAAQ,CACN,CACET,KAAM,8BACNrB,YAAa,oFACbqC,YAAa,kBACbD,WAAY,mBAEd,CACEf,KAAM,eACNrB,YAAa,oFACbqC,YAAa,eACbD,WAAY,kBAKlB,CACEf,KAAM,SACNe,WAAY,cACZN,OAAQ,CACN,CACET,KAAM,wBACNrB,YAAa,qDACbqC,YAAa,gBACbD,WAAY,iBAEd,CACEf,KAAM,qBACNrB,YAAa,gDACbqC,YAAa,aACbD,WAAY,cAEd,CACEf,KAAM,eACNrB,YAAa,yCACbqC,YAAa,eACbD,WAAY,gBAEd,CACEf,KAAM,gBACNrB,YAAa,mEACbqC,YAAa,gBACbD,WAAY,mBAIlB,CACEf,KAAM,UACNe,WAAY,gBACZN,OAAQ,CACN,CACET,KAAM,0BACNrB,YAAa,8CACbqC,YAAa,gBACbD,WAAY,mBAIlB,CACEf,KAAM,QACNe,WAAY,cACZN,OAAQ,CACN,CACET,KAAM,cACNrB,YAAa,4CACbqC,YAAa,cACbD,WAAY,iBAIlB,CACEf,KAAM,SACNe,WAAY,eACZN,OAAQ,CACN,CACET,KAAM,YACNrB,YAAa,sFACbqC,YAAa,YACbD,WAAY,eAIlB,CACEf,KAAM,YACNe,WAAY,kBACZN,OAAQ,CACN,CACET,KAAM,aACNrB,YAAa,mFACbqC,YAAa,aACbD,WAAY,YAwBLE,EAlBH,kBACVrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,mBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,WAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZ+B,EAAOJ,IAAI,SAAAQ,GAAK,OACftC,EAAAC,EAAAC,cAACqC,EAAD,CACEN,IAAKK,EAAMH,WACXf,KAAMkB,EAAMlB,KACZS,OAAQS,EAAMT,cChRJW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8655adfe.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonDetail = ({description}) => (\n  <li className=\"person-detail-item\">{description}</li>\n)\n\nexport default PersonDetail\n","import React, { Component } from 'react';\nimport PersonDetail from './PersonDetail.js'\n\n// const Person = ({name, description}) => (\n//   <div>\n//     <li className=\"person-list-item\">{name}</li>\n//     <div className=\"\">\n//       <PersonDetail\n//         description={description}\n//       />\n//     </div>\n//   </div>\n// )\n\nclass Person extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      hidden: true\n    }\n\n    this.toggleHidden = this.toggleHidden.bind(this)\n  }\n\n  toggleHidden() {\n    this.setState({\n      hidden: !this.state.hidden\n    })\n  }\n\n\n  render () {\n    return (\n        <div>\n          <li onClick={this.toggleHidden} className=\"person-list-item\">{this.props.name}</li>\n          <div className={this.state.hidden ? 'hidden' : ''}>\n            <PersonDetail\n              description={this.props.description}\n            />\n          </div>\n        </div>\n    )\n  }\n\n}\n\nexport default Person\n","import React, { Component } from 'react';\nimport Person from './Person.js'\n\nclass House extends Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      liked: false,\n      collapsed: false\n    }\n\n    // This syntax ensures `this` is bound within toggleLiked\n    this.toggleLiked = this.toggleLiked.bind(this)\n    this.toggleCollapsed = this.toggleCollapsed.bind(this)\n  }\n\n  toggleLiked() {\n    this.setState({\n      liked: !this.state.liked\n    })\n  }\n\n  toggleCollapsed() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    })\n  }\n\n  render () {\n    return (\n      <div className={`house-name ${this.state.liked ? 'liked' : ''}`}>\n        <h3 className={`individual-house ${this.state.collapsed ? 'collapsed' : ''}`}>{this.props.name}</h3>\n        <p className={this.state.collapsed ? 'collapsed' : ''}>Click a house member's name for details</p>\n        <ul className={`${this.state.collapsed ? 'collapsed' : ''}`}>\n        {this.props.people.map(person => (\n          <Person\n            key={person.name}\n            name={person.name}\n            description={person.description}\n          />\n        ))}\n        </ul>\n        <button className=\"like-button\" onClick={this.toggleLiked}>{this.state.liked ? 'Unlike' : 'Like'}</button>\n        <button className=\"collapse-button\" onClick={this.toggleCollapsed}>{this.state.collapsed ? 'Show' : 'Collapse'}</button>\n      </div>\n    )\n  }\n}\n\n\n\nexport default House\n","import React from 'react';\nimport './App.css';\n\nimport House from './House.js'\n\nconst houses = [\n  {\n    name: 'Starks',\n    wikiSuffix: 'House_Stark',\n    people: [\n      {\n        name: 'Eddard \"Ned\" Stark',\n        description: 'Lord of Winterfell - Warden of the North - Hand of the King - Married to Catelyn (Tully) Stark',\n        imageSuffix: 'eddard-stark',\n        wikiSuffix: 'Eddard_Stark'\n      },\n      {\n        name: 'Benjen Stark',\n        description: 'Brother of Eddard Stark - First ranger of the Nights Watch',\n        imageSuffix: 'benjen-stark',\n        wikiSuffix: 'Benjen_Stark'\n      },\n      {\n        name: 'Robb Stark',\n        description: 'Son of Eddard and Catelyn Stark - Direwolf: Grey Wind',\n        imageSuffix: 'robb-stark',\n        wikiSuffix: 'Robb_Stark'\n      },\n      {\n        name: 'Sansa Stark',\n        description: 'Daughter of Eddard and Catelyn Stark - Direwolf: Lady',\n        imageSuffix: 'sansa-stark',\n        wikiSuffix: 'Sansa_Stark'\n      },\n      {\n        name: 'Arya Stark',\n        description: 'Daughter of Eddard and Catelyn Stark - Direwolf: Nymeria',\n        imageSuffix: 'arya-stark',\n        wikiSuffix: 'Arya_Stark'\n      },\n      {\n        name: 'Brandon \"Bran\" Stark',\n        description: 'Son of Eddard and Catelyn Stark - Direwolf: Summer',\n        imageSuffix: 'brandon-stark',\n        wikiSuffix: 'Brandon_Stark'\n      },\n      {\n        name: 'Rickon Stark',\n        description: 'Son of Eddard and Catelyn Stark - Direwolf: Shaggydog',\n        imageSuffix: 'rickon-stark',\n        wikiSuffix: 'Rickon_Stark'\n      },\n      {\n        name: 'Jon Snow',\n        description: 'Bastard son of Eddard Stark - Steweard in the Nights Watch - Direwolf: Ghost',\n        imageSuffix: 'jon-snow',\n        wikiSuffix: 'Jon_Snow'\n      }\n    ]\n  },\n  {\n    name: 'Lannisters',\n    wikiSuffix: 'House_Lannister',\n    people: [\n      {\n        name: 'Tywin Lannister',\n        description: 'Lord of Casterly Rock - Warden of the West',\n        imageSuffix: 'tywin-lannister',\n        wikiSuffix: 'Tywin_Lannister'\n      },\n      {\n        name: 'Tyrion Lannister',\n        description: 'Son of Tywin Lannister - The Imp',\n        imageSuffix: 'tyrion-lannister',\n        wikiSuffix: 'Tyrion_Lannister'\n      },\n      {\n        name: 'Jaime Lannister',\n        description: 'The Kingslayer - Knight of the Kingsgaurd - Son of Tywin Lannister',\n        imageSuffix: 'jaime-lannister',\n        wikiSuffix: 'Jaime_Lannister'\n      },\n      {\n        name: 'Queen Cersei (Lannister) Baratheon',\n        description: 'Married to King Robert Baratheon - Daughter of Tywin Lannister',\n        imageSuffix: 'cersei-lannister',\n        wikiSuffix: 'Cersei_Lannister'\n      }\n    ]\n  },\n  {\n    name: 'Baratheons',\n    wikiSuffix: 'House_Baratheon',\n    people: [\n      {\n        name: 'King Robert Baratheon',\n        description: 'The first of his name - Lord of the Seven Kingdoms',\n        imageSuffix: 'robert-baratheon',\n        wikiSuffix: 'Robert_Baratheon'\n      },\n      {\n        name: 'Stannis Baratheon',\n        description: 'Lord of Dragonstone - Master of Ships - Brother of Robert Baratheon',\n        imageSuffix: 'stannis-baratheon',\n        wikiSuffix: 'Stannis_Baratheon'\n      },\n      {\n        name: 'Renly Baratheon',\n        description: 'Lord of Storms End - Master of Laws - Brother of Robert Baratheon',\n        imageSuffix: 'renly-baratheon',\n        wikiSuffix: 'Renly_Baratheon'\n      },\n      {\n        name: 'Joffrey Baratheon',\n        description: 'Heir to the Iron Throne - Son of Robert and Cersei Baratheon',\n        imageSuffix: 'joffrey-baratheon',\n        wikiSuffix: 'Joffrey_Baratheon'\n      },\n      {\n        name: 'Tommen Baratheon',\n        description: 'Son of Robert and Cersei Baratheon',\n        imageSuffix: 'tommen-baratheon',\n        wikiSuffix: 'Tommen_Baratheon'\n      },\n      {\n        name: 'Myrcella Baratheon',\n        description: 'Daughter of Robert and Cersei Baratheon',\n        imageSuffix: 'myrcella-baratheon',\n        wikiSuffix: 'Myrcella_Baratheon'\n      }\n    ]\n  },\n  {\n    name: 'Targaryens',\n    wikiSuffix: 'House_Targaryen',\n    people: [\n      {\n        name: 'Daenerys Targaryen',\n        description: 'Stormborn - Khaleesi of the Dothraki - The Unburnt - Mother of Dragons - Daughter of Aerys II Targaryen \"The Mad King\"',\n        imageSuffix: 'daenerys-targaryen',\n        wikiSuffix: 'Daenerys_Targaryen'\n      },\n      {\n        name: 'Viserys Targaryen',\n        description: 'The Beggar King - Son of Aerys II Targaryen \"The Mad King\"',\n        imageSuffix: 'viserys-targaryen',\n        wikiSuffix: 'Viserys_Targaryen'\n      }\n    ]\n  },\n  {\n    name: 'Greyjoys',\n    wikiSuffix: 'House_Greyjoy',\n    people: [\n      {\n        name: 'Balon Greyjoy',\n        description: 'Lord Reaper of Pyke - Head of House Greyjoy',\n        imageSuffix: 'balon-greyjoy',\n        wikiSuffix: 'Balon_Greyjoy'\n      },\n      {\n        name: 'Theon Greyjoy',\n        description: 'Ward of the Starks - Heir to the Iron Islands - Son of Balon Greyjoy',\n        imageSuffix: 'theon-greyjoy',\n        wikiSuffix: 'Theon_Greyjoy'\n      },\n      {\n        name: 'Yara Greyjoy',\n        description: 'Ironborn - Son of Balon Greyjoy',\n        imageSuffix: 'yara-greyjoy',\n        wikiSuffix: 'Yara_Greyjoy'\n      }\n    ]\n  },\n  {\n    name: 'Tyrells',\n    wikiSuffix: 'House_Tyrell',\n    people: [\n      {\n        name: 'Margaery (Tyrell) Baratheon',\n        description: 'Wife of Renly Baratheon - Sister of Loras Tyrell - Granddaughter of Olenna Tyrell',\n        imageSuffix: 'margaery-tyrell',\n        wikiSuffix: 'Margaery_Tyrell'\n      },\n      {\n        name: 'Loras Tyrell',\n        description: 'Heir to Highgarden - Commander of the Kings Gaurd - Brother of Margaery Baratheon',\n        imageSuffix: 'loras-tyrell',\n        wikiSuffix: 'Loras_Tyrell'\n      }\n\n    ]\n  },\n  {\n    name: 'Tullys',\n    wikiSuffix: 'House_Tully',\n    people: [\n      {\n        name: 'Catelyn (Tully) Stark',\n        description: 'Married to Eddard Stark - Daughter of Hoster Tully',\n        imageSuffix: 'catelyn-tully',\n        wikiSuffix: 'Catelyn_Tully'\n      },\n      {\n        name: 'Lysa (Tully) Arryn',\n        description: 'Widow of Jon Arryn - Daughter of Hoster Tully',\n        imageSuffix: 'lysa-tully',\n        wikiSuffix: 'Lysa_Tully'\n      },\n      {\n        name: 'Edmure Tully',\n        description: 'Heir to Riverrun - Son of Hoster Tully',\n        imageSuffix: 'edmure-tully',\n        wikiSuffix: 'Edmure_Tully'\n      },\n      {\n        name: 'Brynden Tully',\n        description: 'Lord of Riverrun - Head of House Tully - Brother of Hoster Tully',\n        imageSuffix: 'brynden-tully',\n        wikiSuffix: 'Brynden_Tully'\n      }\n    ]\n  },\n  {\n    name: 'Redwyne',\n    wikiSuffix: 'House_Redwyne',\n    people: [\n      {\n        name: 'Olenna (Redwyne) Tyrell',\n        description: 'Matriarch of House Tyrell - Queen of Thorns',\n        imageSuffix: 'olenna-tyrell',\n        wikiSuffix: 'Olenna_Tyrell'\n      }\n    ]\n  },\n  {\n    name: 'Freys',\n    wikiSuffix: 'House_Freys',\n    people: [\n      {\n        name: 'Walder Frey',\n        description: 'Lord of the Crossing - Head of House Frey',\n        imageSuffix: 'walder-frey',\n        wikiSuffix: 'Walder_Frey'\n      }\n    ]\n  },\n  {\n    name: 'Arryns',\n    wikiSuffix: 'House_Arryns',\n    people: [\n      {\n        name: 'Jon Arryn',\n        description: 'Lord of the Eyrie - Head of House Arryn - Warden of the East - Defender of the Vale',\n        imageSuffix: 'jon-arryn',\n        wikiSuffix: 'Jon_Arryn'\n      }\n    ]\n  },\n  {\n    name: 'Dothrakis',\n    wikiSuffix: 'House_Dothrakis',\n    people: [\n      {\n        name: 'Khal Drogo',\n        description: 'Leader of the Dothraki people - Dothraki Warlord - Married to Daenerys Targaryen',\n        imageSuffix: 'khal-drogo',\n        wikiSuffix: 'Drogo'\n      }\n    ]\n  }\n]\n\nconst App = () => (\n  <div>\n    <div className=\"heading\">\n      <h1 className=\"primary\">Game of Thrones</h1>\n      <h3 className=\"primary\">Houses</h3>\n    </div>\n    <div className=\"container\">\n      {houses.map(house => (\n        <House\n          key={house.wikiSuffix}\n          name={house.name}\n          people={house.people}\n        />\n      ))}\n    </div>\n  </div>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}